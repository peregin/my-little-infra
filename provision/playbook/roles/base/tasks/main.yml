- name: install epel packages
  yum:
    name: epel-release
    state: present
  become: true

- name: install base packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - yum-utils
    - httpd-tools
    - python2-pip
    - libsemanage-python
    - vim
    - wget
  become: true

- name: setup LC_ALL environment variable
  lineinfile:
    dest: /etc/environment
    regexp: '^LC_ALL=.*'
    line: "LC_ALL=en_US.UTF-8"
  become: true

- name: setup LC_CTYPE environment variable
  lineinfile:
    dest: /etc/environment
    regexp: '^LC_CTYPE=.*'
    line: "LC_CTYPE=en_US.UTF-8"
  become: true

- name: disable systemslice
  blockinfile:
    path: /etc/rsyslog.d/ignore-systemd-session-slice.conf
    create: yes
    block: |
      if $programname == "systemd" and ($msg contains "Starting Session" or $msg contains "Started Session" or $msg contains "session closed" or $msg contains "session opened" or $msg contains "Created slice" or $msg contains "Starting user-" or $msg contains "Starting User Slice of" or $msg contains "Startup" or $msg contains "Removed session" or $msg contains "New session" or $msg contains "Removed slice User Slice of" or $msg contains "Stopping User Slice of" or $msg contains "dwc_otg_handle_mode_mismatch_intr") then stop
      if $programname == "systemd-logind" and ($msg contains "Starting Session" or $msg contains "Started Session" or $msg contains "session closed" or $msg contains "session opened" or $msg contains "Created slice" or $msg contains "Starting user-" or $msg contains "Starting User Slice of" or $msg contains "Removed session"  or $msg contains "New session" or $msg contains "Removed slice User Slice of" or $msg contains "Stopping User Slice of") then stop
  become: true
  notify:
    - restart rsyslog

- name: copy clean-centos shell script to home directory
  copy:
    src: "clean-centos.sh"
    dest: "/home/{{ ansible_user }}/clean-centos.sh"
    owner: "{{ ansible_user }}"
    mode: 0777
  become: true

- name: setup con job for centos cleanup for every morning 8am"
  cron:
    name: "clean-centos"
    minute: "0"
    hour: "8"
    job: "/home/{{ ansible_user }}/clean-centos.sh"
  become: true
